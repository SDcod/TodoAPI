{"version":3,"sources":["Todos.jsx","Todo.jsx","App.js","index.js"],"names":["Todos","useState","todos","setTodos","searchTerm","setSearchterm","order","setorder","history","useHistory","useEffect","axios","get","then","res","data","className","type","placeholder","onChange","e","target","value","onClick","col","sorted","sort","a","b","toString","toLowerCase","sorting","length","filter","val","id","includes","title","completed","map","todo","push","userId","Todo","useParams","Todoid","Todotitle","todoDetails","setTodoDetails","responseTodos","detail","style","listStyle","name","email","render","App","path","children","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07081e9f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport const Todos = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [searchTerm, setSearchterm] = useState(\"\");\r\n  const [order, setorder] = useState(\"asc\");\r\n  const sorting = (col) => {\r\n    if (order === \"asc\") {\r\n      const sorted = [...todos].sort((a, b) => {\r\n        return (\r\n          a[col].toString().toLowerCase() - b[col].toString().toLowerCase()\r\n        );\r\n      });\r\n\r\n      setTodos(sorted);\r\n      setorder(\"dsc\");\r\n    }\r\n    if (order === \"dsc\") {\r\n      const sorted = [...todos].sort((a, b) => {\r\n        return (\r\n          b[col].toString().toLowerCase() - a[col].toString().toLowerCase()\r\n        );\r\n      });\r\n      setTodos(sorted);\r\n      setorder(\"asc\");\r\n    }\r\n  };\r\n\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    axios.get(`https://jsonplaceholder.typicode.com/todos`).then((res) => {\r\n      setTodos(res.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className='list-section'>\r\n      <div className='list-header'>\r\n        <h1>&#x2713; TODO LIST </h1>\r\n        <input\r\n          className='list-search-bar'\r\n          type='text'\r\n          placeholder='Search Here...'\r\n          onChange={(e) => {\r\n            setSearchterm(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <table className='table table-bordered'>\r\n          <thead className='thead-dark'>\r\n            <tr>\r\n              <th>\r\n                <div className='sort-container' onClick={() => sorting(\"id\")}>\r\n                  {order === \"asc\" ? \"▼\" : \"▲\"} sort\r\n                </div>\r\n                TODO_ID\r\n              </th>\r\n              <th>TODO_TITLE</th>\r\n              <th>STATUS</th>\r\n              <th>ACTION</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {todos && todos.length > 0\r\n              ? todos\r\n                  .filter((val) => {\r\n                    if (searchTerm === \"\") {\r\n                      return val;\r\n                    } else if (\r\n                      val.id\r\n                        .toString()\r\n                        .toLowerCase()\r\n                        .includes(searchTerm.toString().toLowerCase()) ||\r\n                      val.title\r\n                        .toString()\r\n                        .toLowerCase()\r\n                        .includes(searchTerm.toString().toLowerCase()) ||\r\n                      (val.completed ? \"completed\" : \"incomplete\")\r\n                        .toString()\r\n                        .toLowerCase()\r\n                        .includes(searchTerm.toString().toLowerCase())\r\n                    ) {\r\n                      return val;\r\n                    }\r\n                  })\r\n                  .map((todo) => {\r\n                    return (\r\n                      <tr className='table-data'>\r\n                        <td>{todo.id}</td>\r\n                        <td>{todo.title}</td>\r\n                        <td>{todo.completed ? \"completed\" : \"incomplete\"}</td>\r\n                        <td>\r\n                          <button\r\n                            className='details-btn'\r\n                            key={todo.id}\r\n                            id={todo.id}\r\n                            onClick={() => {\r\n                              history.push(\r\n                                `/Todo/${todo.userId}/${todo.id}/${todo.title}`\r\n                              );\r\n                            }}>\r\n                            Details\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n              : \"LOADING...\"}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Route } from \"react-router-dom\";\r\nconst Todo = () => {\r\n  const { id, Todoid, Todotitle } = useParams();\r\n\r\n  const [todoDetails, setTodoDetails] = useState([]);\r\n\r\n  {\r\n    useEffect(() => {\r\n      axios.get(`https://jsonplaceholder.typicode.com/users/`).then((res) => {\r\n        const responseTodos = res.data;\r\n        setTodoDetails(responseTodos);\r\n      });\r\n    }, []);\r\n  }\r\n\r\n  return (\r\n    <div className='todo-user'>\r\n      {todoDetails.length > 0\r\n        ? todoDetails\r\n            .filter((detail) => detail.id == id)\r\n            .map((detail) => (\r\n              <li\r\n                className='user-detail-container'\r\n                key={detail.id}\r\n                style={{ listStyle: \"none\" }}>\r\n                <p>\r\n                  <span>Todo Id :</span> {Todoid}\r\n                </p>\r\n                <br />\r\n                <p>\r\n                  <span>Todo Title :</span> {Todotitle}\r\n                </p>\r\n                <br />\r\n                <p>\r\n                  <span>User Id :</span> {detail.id}\r\n                </p>\r\n                <br />\r\n                <p>\r\n                  <span>User Name :</span> {detail.name}\r\n                </p>\r\n                <br />\r\n                <p>\r\n                  <span>Email :</span> {detail.email}\r\n                </p>\r\n              </li>\r\n            ))\r\n        : \"LOADING...\"}\r\n      <Route\r\n        render={({ history }) => (\r\n          <button\r\n            className='clear-btn'\r\n            onClick={() => {\r\n              history.push(\"/TodoRollixer/\");\r\n            }}>\r\n            Clear\r\n          </button>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\nimport { Todos } from \"./Todos\";\nimport Todo from \"./Todo\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router>\n        <Switch>\n          <div className='mainPage'>\n            <Route path='/' children={<Todos />} />\n            <Route path='/todo/:id/:Todoid/:Todotitle' children={<Todo />} />\n          </div>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}